"use strict";const r=require("electron");r.contextBridge.exposeInMainWorld("electronAPI",{getInfoOnSubnets:()=>r.ipcRenderer.invoke("get-info-on-subnets"),getResourceUsage:()=>r.ipcRenderer.invoke("get-resource-usage"),onUpdateAvailable:e=>r.ipcRenderer.on("update-available",(a,n)=>e(n)),onUpdateDownloaded:e=>r.ipcRenderer.on("update-downloaded",(a,n)=>e(n)),onCheckingForUpdate:e=>r.ipcRenderer.on("checking-for-update",()=>e()),onUpdateNotAvailable:e=>r.ipcRenderer.on("update-not-available",(a,n)=>e(n)),onDownloadProgress:e=>r.ipcRenderer.on("download-progress",(a,n)=>e(n)),onElectronSDLControllerStateChange:e=>r.ipcRenderer.on("sdl-controller-state",(a,n)=>e(n)),checkSDLStatus:()=>r.ipcRenderer.invoke("check-sdl-status"),downloadUpdate:()=>r.ipcRenderer.send("download-update"),installUpdate:()=>r.ipcRenderer.send("install-update"),cancelUpdate:()=>r.ipcRenderer.send("cancel-update"),setItem:async(e,a,n)=>{const o=await a.arrayBuffer();await r.ipcRenderer.invoke("setItem",{key:e,value:new Uint8Array(o),subFolders:n})},getItem:async(e,a)=>{const n=await r.ipcRenderer.invoke("getItem",{key:e,subFolders:a});return n?new Blob([n]):null},removeItem:async(e,a)=>{await r.ipcRenderer.invoke("removeItem",{key:e,subFolders:a})},clear:async e=>{await r.ipcRenderer.invoke("clear",{subFolders:e})},keys:async e=>await r.ipcRenderer.invoke("keys",{subFolders:e}),openCockpitFolder:()=>r.ipcRenderer.invoke("open-cockpit-folder"),openVideoFolder:()=>r.ipcRenderer.invoke("open-video-folder"),captureWorkspace:e=>r.ipcRenderer.invoke("capture-workspace",e),serialListPorts:()=>r.ipcRenderer.invoke("serial-list-ports"),serialOpen:(e,a)=>r.ipcRenderer.invoke("serial-open",{path:e,baudRate:a}),serialWrite:(e,a)=>r.ipcRenderer.invoke("serial-write",{path:e,data:a}),serialClose:e=>r.ipcRenderer.invoke("serial-close",{path:e}),serialIsOpen:e=>r.ipcRenderer.invoke("serial-is-open",{path:e}),onSerialData:e=>{r.ipcRenderer.on("serial-data",(a,n)=>e(n))}});
