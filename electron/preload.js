"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("electronAPI",{getInfoOnSubnets:()=>n.ipcRenderer.invoke("get-info-on-subnets"),onUpdateAvailable:e=>n.ipcRenderer.on("update-available",(a,r)=>e(r)),onUpdateDownloaded:e=>n.ipcRenderer.on("update-downloaded",(a,r)=>e(r)),onCheckingForUpdate:e=>n.ipcRenderer.on("checking-for-update",()=>e()),onUpdateNotAvailable:e=>n.ipcRenderer.on("update-not-available",(a,r)=>e(r)),onDownloadProgress:e=>n.ipcRenderer.on("download-progress",(a,r)=>e(r)),downloadUpdate:()=>n.ipcRenderer.send("download-update"),installUpdate:()=>n.ipcRenderer.send("install-update"),cancelUpdate:()=>n.ipcRenderer.send("cancel-update"),setItem:async(e,a,r)=>{const o=await a.arrayBuffer();await n.ipcRenderer.invoke("setItem",{key:e,value:new Uint8Array(o),subFolders:r})},getItem:async(e,a)=>{const r=await n.ipcRenderer.invoke("getItem",{key:e,subFolders:a});return r?new Blob([r]):null},removeItem:async(e,a)=>{await n.ipcRenderer.invoke("removeItem",{key:e,subFolders:a})},clear:async e=>{await n.ipcRenderer.invoke("clear",{subFolders:e})},keys:async e=>await n.ipcRenderer.invoke("keys",{subFolders:e}),openCockpitFolder:()=>n.ipcRenderer.invoke("open-cockpit-folder"),openVideoFolder:()=>n.ipcRenderer.invoke("open-video-folder")});
